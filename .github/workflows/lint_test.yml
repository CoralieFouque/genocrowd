name: Lint and test
on: ["push", "pull_request"]
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install flake8
      run: pip install flake8 flake8-import-order
    - name: Flake8
      run: flake8 genocrowd tests --ignore=E501,W504

  node_test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2-beta
      with:
        node-version: '10'
    - name: Install modules
      run: npm install
    - name: Run ESLint
      run: ./node_modules/.bin/eslint --config .eslintrc.yml "genocrowd/react/src/**"

  py_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install deps
      run: pip install -r requirements.txt
    - name: Install genocrowd
      run: python setup.py install
    - name: Launch containers
      run: |
        docker pull mongo:4.2-bionic
        docker pull quay.io/gmod/apollo:latest
        dockerIdMongo=$(sudo docker run -d --name mongo -t -p 27017:27017 mongo:4.2-bionic)
        dockerIdApollo=$(sudo docker run -d --name apollo -it -v /jbrowse/root/directory/:/data -v postgres-data:/var/lib/postgresql -p 8888:8080 quay.io/gmod/apollo:latest)
        docker cp ./test_data/dataset/ apollo:/data/dataset/
        sleep 1m
        docker logs $dockerIdMongo
        docker logs $dockerIdApollo
    - name: Run tests
      run: |
        pytest --cov=. -vv
